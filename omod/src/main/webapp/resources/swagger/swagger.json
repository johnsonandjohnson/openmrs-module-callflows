{
  "swagger" : "2.0",
  "info" : {
    "description" : "REST API for Call flows Module.",
    "version" : "v1",
    "title" : "Call flows Module REST API"
  },
  "basePath" : "/openmrs/ws",
  "tags" : [ {
    "name" : "REST API to handle inbound and outbound calls"
  }, {
    "name" : "REST API to load private key and IVR properties from the uploaded file"
  }, {
    "name" : "REST API to manage call flows"
  }, {
    "name" : "REST API to manage configurations settings, adapted and enhanced from MoTeCH's IVR module"
  }, {
    "name" : "REST API to update the call status periodically"
  } ],
  "paths" : {
    "/callflows/auth/upload/ivr-properties" : {
      "post" : {
        "tags" : [ "REST API to load private key and IVR properties from the uploaded file" ],
        "summary" : "Loads IVR properties from the uploaded file",
        "description" : "Loads IVR properties from the uploaded file",
        "operationId" : "uploadIvrProperties",
        "parameters" : [ {
          "in" : "body",
          "name" : "file",
          "description" : "File containing the IVR properties file",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/MultipartFile"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully uploaded IVR properties"
          },
          "404" : {
            "description" : "Authentication settings not found to upload IVR properties"
          },
          "500" : {
            "description" : "Failure to upload IVR properties"
          }
        }
      }
    },
    "/callflows/auth/upload/private-key" : {
      "post" : {
        "tags" : [ "REST API to load private key and IVR properties from the uploaded file" ],
        "summary" : "Loads private key from the uploaded file",
        "description" : "Loads private key from the uploaded file",
        "operationId" : "uploadPrivateKey",
        "parameters" : [ {
          "in" : "body",
          "name" : "file",
          "description" : "File containing the private key file",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/MultipartFile"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully uploaded private key"
          },
          "404" : {
            "description" : "Authentication settings not found to upload private key"
          },
          "500" : {
            "description" : "Failure to upload private key"
          }
        }
      }
    },
    "/callflows/calls/export-details" : {
      "get" : {
        "tags" : [ "REST API to handle inbound and outbound calls" ],
        "summary" : "Export calls details",
        "description" : "Export calls details",
        "operationId" : "exportCallsDetails",
        "parameters" : [ {
          "name" : "set",
          "in" : "query",
          "description" : "Number of set",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully exported calls details",
            "schema" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "object"
              }
            }
          }
        }
      }
    },
    "/callflows/calls/{callId}.{extension}" : {
      "get" : {
        "tags" : [ "REST API to handle inbound and outbound calls" ],
        "summary" : "Handles call continuation",
        "description" : "Handles call continuation",
        "operationId" : "handleContinuation",
        "parameters" : [ {
          "name" : "callId",
          "in" : "path",
          "description" : "Current call's unique identifier",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "extension",
          "in" : "path",
          "description" : "The extension to process",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "params",
          "in" : "query",
          "description" : "A map of parameters that are passed along with the request",
          "required" : true,
          "type" : "object"
        }, {
          "name" : "headers",
          "in" : "header",
          "description" : "A map of headers that are passed along with the request",
          "required" : true,
          "type" : "object",
          "default" : ""
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful call continuation"
          },
          "500" : {
            "description" : "Failure in call continuation due to cyclic loop"
          }
        }
      }
    },
    "/callflows/configs" : {
      "get" : {
        "tags" : [ "REST API to manage configurations settings, adapted and enhanced from MoTeCH's IVR module" ],
        "summary" : "Get all IVR based configurations defined in system",
        "description" : "Get all IVR based configurations defined in system",
        "operationId" : "getConfigs",
        "responses" : {
          "200" : {
            "description" : "Successfully returns all configurations",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object"
              }
            }
          },
          "403" : {
            "description" : "Successfully returns all configurations"
          }
        }
      },
      "post" : {
        "tags" : [ "REST API to manage configurations settings, adapted and enhanced from MoTeCH's IVR module" ],
        "summary" : "Update all IVR configurations in the system in one go",
        "description" : "Update all IVR configurations in the system in one go",
        "operationId" : "updateConfigs",
        "parameters" : [ {
          "in" : "body",
          "name" : "configContracts",
          "description" : "List of configurations to update",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ConfigContractList"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully updated all configurations",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object"
              }
            }
          },
          "400" : {
            "description" : "Unsuccessful update due to validation error"
          }
        }
      }
    },
    "/callflows/flows" : {
      "get" : {
        "tags" : [ "REST API to manage call flows" ],
        "summary" : "Search for call flow",
        "description" : "Search for call flow",
        "operationId" : "searchFlowsByName",
        "parameters" : [ {
          "name" : "lookup",
          "in" : "query",
          "description" : "Lookup By Name",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "term",
          "in" : "query",
          "description" : "A search term that is interpreted by the concerned lookup function",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully searches a call flow",
            "schema" : {
              "$ref" : "#/definitions/SearchResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "REST API to manage call flows" ],
        "summary" : "Create a call flow",
        "description" : "Create a call flow if no duplicate (by name) exists",
        "operationId" : "createFlow",
        "parameters" : [ {
          "in" : "body",
          "name" : "callFlowRequest",
          "description" : "Call flow request with name, description and raw fields",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CallFlowRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully created a call flow",
            "schema" : {
              "$ref" : "#/definitions/CallFlowResponse"
            }
          },
          "400" : {
            "description" : "Call flow name is not an alphanumeric"
          },
          "409" : {
            "description" : "Call flow with the same name already exists"
          }
        }
      }
    },
    "/callflows/flows/{id}" : {
      "put" : {
        "tags" : [ "REST API to manage call flows" ],
        "summary" : "Update a call flow",
        "description" : "Update a call flow",
        "operationId" : "updateFlow",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Call flow id to update",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "callFlowRequest",
          "description" : "Call flow request with name, description and raw fields",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CallFlowRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully updated a call flow",
            "schema" : {
              "$ref" : "#/definitions/CallFlowResponse"
            }
          },
          "400" : {
            "description" : "Call flow name is not an alphanumeric"
          },
          "409" : {
            "description" : "Call flow with the same name already exists"
          }
        }
      },
      "delete" : {
        "tags" : [ "REST API to manage call flows" ],
        "summary" : "Delete a call flow",
        "description" : "Delete a call flow",
        "operationId" : "deleteFlow",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Call flow id to delete",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully deleted a call flow"
          },
          "400" : {
            "description" : "Unsuccessful to delete a call flow"
          }
        }
      }
    },
    "/callflows/in/{conf}/flows/{flowName}.{extension}" : {
      "get" : {
        "tags" : [ "REST API to handle inbound and outbound calls" ],
        "summary" : "Handles an incoming call",
        "description" : "Handles an incoming call",
        "operationId" : "handleIncoming",
        "parameters" : [ {
          "name" : "conf",
          "in" : "path",
          "description" : "The configuration to use",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "flowName",
          "in" : "path",
          "description" : "The flow name to invoke",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "extension",
          "in" : "path",
          "description" : "the extension to process",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "params",
          "in" : "query",
          "description" : "A map of parameters that are passed along with the request",
          "required" : true,
          "type" : "object"
        }, {
          "name" : "headers",
          "in" : "header",
          "description" : "A map of headers that are passed along with the request",
          "required" : true,
          "type" : "object",
          "default" : ""
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful completion of an incoming call"
          },
          "400" : {
            "description" : "Passed an invalid configuration/flowName details"
          },
          "500" : {
            "description" : "Failure to handle an incoming call"
          }
        }
      }
    },
    "/callflows/out/{configName}/flows/{name}.{extension}" : {
      "get" : {
        "tags" : [ "REST API to handle inbound and outbound calls" ],
        "summary" : "Initiates an outbound call",
        "description" : "Initiates an outbound call",
        "operationId" : "handleOutgoing",
        "parameters" : [ {
          "name" : "configName",
          "in" : "path",
          "description" : "Configuration name to use",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of the flow to invoke",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "extension",
          "in" : "path",
          "description" : "Extension to invoke",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "params",
          "in" : "query",
          "description" : "A map of parameters that are passed along with the request",
          "required" : true,
          "type" : "object"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful completion of an outbound call",
            "schema" : {
              "$ref" : "#/definitions/OutboundCallResponse"
            }
          }
        }
      }
    },
    "/callflows/person/{personUuid}/out/{configName}/flows/{name}.{extension}" : {
      "get" : {
        "tags" : [ "REST API to handle inbound and outbound calls" ],
        "summary" : "Handles an outgoing call by PersonUuid",
        "description" : "Handles an outgoing call by PersonUuid",
        "operationId" : "handleOutgoingByPersonUuid",
        "parameters" : [ {
          "name" : "configName",
          "in" : "path",
          "description" : "Configuration name to use",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Name of the flow to invoke",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "extension",
          "in" : "path",
          "description" : "Extension to invoke",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "personUuid",
          "in" : "path",
          "description" : "Person Uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "params",
          "in" : "query",
          "description" : "A map of parameters that are passed along with the request",
          "required" : true,
          "type" : "object"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful completion of an outbound call by PersonUuid"
          }
        }
      }
    },
    "/callflows/renderers" : {
      "get" : {
        "tags" : [ "REST API to manage configurations settings, adapted and enhanced from MoTeCH's IVR module" ],
        "summary" : "Get all client side Renderers defined in the system",
        "description" : "Get all client side Renderers defined in the system",
        "operationId" : "getRenderers",
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved all client side Renderers defined in the system",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "REST API to manage configurations settings, adapted and enhanced from MoTeCH's IVR module" ],
        "summary" : "Update all client side Renderers defined in the system",
        "description" : "Update all client side Renderers defined in the system",
        "operationId" : "updateRenderers",
        "parameters" : [ {
          "in" : "body",
          "name" : "rendererContracts",
          "description" : "List of renderers to update",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/RendererContract"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully updated client side Renderers defined in the system",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object"
              }
            }
          }
        }
      }
    },
    "/callflows/status/{callId}" : {
      "get" : {
        "tags" : [ "REST API to update the call status periodically" ],
        "summary" : "Update the current call status",
        "description" : "Update the current call status",
        "operationId" : "handleStatus",
        "parameters" : [ {
          "name" : "callId",
          "in" : "path",
          "description" : "CallId to lookup by",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "params",
          "in" : "query",
          "description" : "Call status parameters",
          "required" : true,
          "type" : "object"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully updated the current call status",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    }
  },
  "definitions" : {
    "CallFlowRequest" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "raw" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string"
        }
      }
    },
    "CallFlowResponse" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string"
        },
        "raw" : {
          "type" : "string"
        }
      }
    },
    "ConfigContract" : {
      "type" : "object",
      "required" : [ "outgoingCallMethod" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "outgoingCallMethod" : {
          "type" : "string",
          "pattern" : "^(POST|GET)$"
        },
        "hasAuthRequired" : {
          "type" : "boolean",
          "default" : false
        },
        "outgoingCallPostHeadersMap" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "outgoingCallPostParams" : {
          "type" : "string"
        },
        "outgoingCallUriTemplate" : {
          "type" : "string"
        },
        "servicesMap" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "outboundCallLimit" : {
          "type" : "integer",
          "format" : "int32"
        },
        "outboundCallRetryAttempts" : {
          "type" : "integer",
          "format" : "int32"
        },
        "outboundCallRetrySeconds" : {
          "type" : "integer",
          "format" : "int32"
        },
        "callAllowed" : {
          "type" : "boolean",
          "default" : false
        },
        "testUsersMap" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "ConfigContractList" : {
      "type" : "object",
      "required" : [ "configContracts" ],
      "properties" : {
        "configContracts" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ConfigContract"
          }
        }
      }
    },
    "InputStream" : {
      "type" : "object"
    },
    "MultipartFile" : {
      "type" : "object",
      "properties" : {
        "originalFilename" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "empty" : {
          "type" : "boolean",
          "default" : false
        },
        "bytes" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "format" : "byte"
          }
        },
        "size" : {
          "type" : "integer",
          "format" : "int64"
        },
        "inputStream" : {
          "$ref" : "#/definitions/InputStream"
        },
        "contentType" : {
          "type" : "string"
        }
      }
    },
    "OutboundCallResponse" : {
      "type" : "object",
      "properties" : {
        "callId" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string"
        },
        "reason" : {
          "type" : "string"
        }
      }
    },
    "RendererContract" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "mimeType" : {
          "type" : "string"
        },
        "template" : {
          "type" : "string"
        }
      }
    },
    "SearchResponse" : {
      "type" : "object",
      "properties" : {
        "results" : {
          "type" : "array",
          "items" : {
            "type" : "object"
          }
        },
        "more" : {
          "type" : "boolean",
          "default" : false
        }
      }
    }
  }
}